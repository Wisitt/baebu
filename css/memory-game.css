/* memory-game.css */

.memory-game-section {
    padding: 4rem 2rem;
    background: linear-gradient(to bottom, rgba(255, 107, 149, 0.1), rgba(255, 143, 171, 0.1));
}

.memory-game-container {
    max-width: 1200px;
    margin: 0 auto;
}

.game-stats {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: var(--glass-background);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    box-shadow: var(--glass-shadow);
}

.game-stats span {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--primary-color);
}

.game-stats .moves,
.game-stats .timer {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.game-stats .moves::before {
    content: 'üëÜ';
}

.game-stats .timer::before {
    content: '‚è±Ô∏è';
}

.card-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.5rem;
    perspective: 1000px;
    margin-top: 2rem;
    padding: 1rem;
}

.memory-card {
    aspect-ratio: 3/4;
    cursor: pointer;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.memory-card:hover:not(.flipped):not(.matched) {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.memory-card.flipped {
    transform: rotateY(180deg);
}

.memory-card.matched {
    animation: cardMatch 0.8s ease-out forwards;
}

.card-inner {
    position: absolute;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform 0.6s;
}

.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.card-front {
    background: linear-gradient(135deg, var(--primary-color), var(--heart-color));
    display: flex;
    align-items: center;
    justify-content: center;
}

.card-front::before {
    content: '‚ù§Ô∏è';
    font-size: 2rem;
    opacity: 0.8;
    transform: scale(1);
    transition: transform 0.3s ease;
}

.card-front:hover::before {
    transform: scale(1.2) rotate(10deg);
}

.card-back {
    transform: rotateY(180deg);
    background: white;
    padding: 0.8rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.card-back img {
    width: 100%;
    height: 80%;
    object-fit: cover;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.card-back p {
    font-size: 0.9rem;
    color: var(--text-color);
    text-align: center;
    margin-top: 0.5rem;
    font-weight: 500;
}

/* Congratulations Modal */
.congratulations-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--glass-background);
    backdrop-filter: blur(10px);
    padding: 2rem;
    border-radius: 20px;
    box-shadow: var(--glass-shadow);
    text-align: center;
    z-index: 1000;
    animation: modalAppear 0.5s ease-out;
}

.congratulations-modal h2 {
    color: var(--primary-color);
    margin-bottom: 1rem;
    font-size: 2rem;
}

.congratulations-modal p {
    margin: 0.5rem 0;
    font-size: 1.1rem;
}

.play-again-btn {
    margin-top: 1.5rem;
    padding: 0.8rem 2rem;
    background: var(--primary-color);
    color: white;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    font-size: 1.1rem;
    transition: all 0.3s ease;
}

.play-again-btn:hover {
    background: var(--heart-color);
    transform: scale(1.05);
}

/* Animations */
@keyframes cardMatch {
    0% {
        transform: rotateY(180deg) scale(1);
    }
    50% {
        transform: rotateY(180deg) scale(1.1);
    }
    100% {
        transform: rotateY(180deg) scale(1);
    }
}

@keyframes modalAppear {
    from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}

/* Responsive Design */
@media (max-width: 1200px) {
    .card-grid {
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;
    }
}

@media (max-width: 992px) {
    .card-grid {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (max-width: 768px) {
    .memory-game-section {
        padding: 3rem 1rem;
    }

    .card-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 0.8rem;
    }

    .game-stats {
        flex-direction: column;
        gap: 1rem;
    }
}

@media (max-width: 480px) {
    .card-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
    }

    .congratulations-modal {
        width: 90%;
        padding: 1.5rem;
    }

    .congratulations-modal h2 {
        font-size: 1.5rem;
    }

    .congratulations-modal p {
        font-size: 1rem;
    }

    .play-again-btn {
        padding: 0.6rem 1.5rem;
        font-size: 1rem;
    }
}

/* Card Flip Animation Enhancement */
.memory-card .card-inner {
    animation: none;
}

.memory-card.flipped .card-inner {
    animation: flipIn 0.6s ease-out;
}

@keyframes flipIn {
    0% {
        transform: rotateY(0deg);
    }
    100% {
        transform: rotateY(180deg);
    }
}

/* Match Success Animation */
.match-success {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 3rem;
    opacity: 0;
    pointer-events: none;
}

.memory-card.matched .match-success {
    animation: successPop 0.8s ease-out;
}

@keyframes successPop {
    0% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.5);
    }
    50% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.2);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(1);
    }
}

/* Hover Effects */
.memory-card:not(.flipped):not(.matched):hover .card-front {
    box-shadow: 0 8px 16px rgba(255, 107, 149, 0.2);
    transform: translateY(-2px);
}

/* Loading State */
.memory-card.loading {
    animation: cardLoading 1s infinite;
}

@keyframes cardLoading {
    0% {
        opacity: 1;
    }
    50% {
        opacity: 0.6;
    }
    100% {
        opacity: 1;
    }
}

/* Game Complete Celebration */
.celebration {
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 999;
}

.celebration-particle {
    position: absolute;
    width: 10px;
    height: 10px;
    background: var(--primary-color);
    border-radius: 50%;
}

@keyframes celebrate {
    0% {
        transform: translate(0, 0);
    }
    100% {
        transform: translate(var(--x), var(--y));
        opacity: 0;
    }
}